<Page
    x:Class="CGM.Uwp.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{Binding SettingsViewModel, Source={StaticResource Locator}}"
     xmlns:data="using:CGM.Communication.Data"
    xmlns:viewmodels="using:CGM.Uwp.ViewModels"

            xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
  xmlns:Core="using:Microsoft.Xaml.Interactions.Core" 
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <Pivot x:Name="rootPivot" >
            <PivotItem Header="Upload">
                <Grid Margin="{StaticResource MediumLeftRightMargin}" >
                    <ScrollViewer>

                        <ItemsControl ScrollViewer.VerticalScrollMode="Enabled" ScrollViewer.VerticalScrollBarVisibility="Visible">

                            <StackPanel Orientation="Horizontal">
                                <TextBlock  Margin="0,5,10,0"    x:Uid="Settings_history" Text="Auto start task when CNL inserted" Style="{StaticResource BodyTextStyle}"/>
                                <ToggleSwitch   x:Uid="Settings_historyToggle" IsOn="{x:Bind ViewModel.AutoStartTask, Mode=TwoWay}"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                                <TextBlock Margin="0,5,10,0"   x:Uid="Settings_interval" Text="Interval in seconds" Style="{StaticResource BodyTextStyle}"/>
                                <TextBox   Text="{x:Bind ViewModel.IntervalSeconds, Mode=TwoWay}"></TextBox>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                                <TextBlock Margin="0,5,10,0"   x:Uid="Settings_Timeout" Text="Timeout in seconds" Style="{StaticResource BodyTextStyle}"/>
                                <TextBox   Text="{x:Bind ViewModel.TimeoutSeconds, Mode=TwoWay}"></TextBox>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock  Margin="0,5,10,0"    x:Uid="Settings_UploadToNightscout" Text="Upload to Nightscout" Style="{StaticResource BodyTextStyle}"/>
                                <ToggleSwitch  x:Uid="Settings_UploadToNightscoutToggle"  IsOn="{x:Bind ViewModel.UploadToNightscout, Mode=TwoWay}"/>
                            </StackPanel>

                            <StackPanel x:Name="NightscoutText">
                                <TextBlock Margin="0,5,0,0"   Text="NightscoutUrl"  x:Uid="Settings_url" Style="{StaticResource BodyTextStyle}"/>
                                <TextBox Text="{x:Bind ViewModel.NightscoutUrl, Mode=TwoWay}"></TextBox>


                                <TextBlock Margin="0,5,0,0"   x:Uid="Settings_key" Text="NightscoutApiKey" Style="{StaticResource BodyTextStyle}"/>
                                <TextBox  Text="{x:Bind ViewModel.NightscoutApiKey, Mode=TwoWay}"></TextBox>

                                <StackPanel Orientation="Horizontal">
                                    <TextBlock  Margin="0,5,10,0"    x:Uid="Settings_HandleAlert776" Text="Convert Alert776 to 400 (sgv) entry" Style="{StaticResource BodyTextStyle}"/>
                                    <ToggleSwitch  x:Uid="Settings_HandleAlert776"  IsOn="{x:Bind ViewModel.HandleAlert776, Mode=TwoWay}"/>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal">
                                    <TextBlock  Margin="0,5,10,0"    x:Uid="Settings_MongoUpload" Text="Upload to MongoDb" Style="{StaticResource BodyTextStyle}"/>
                                    <ToggleSwitch  x:Uid="Settings_MongoUploadToggle"  IsOn="{x:Bind ViewModel.MongoUpload, Mode=TwoWay}"/>
                                </StackPanel>

                                <StackPanel x:Name="MongoText">
                                    <TextBlock Margin="0,5,0,0"   Text="MongoDbUrl"  x:Uid="Settings_MongoDbUrl" Style="{StaticResource BodyTextStyle}"/>
                                    <TextBox Text="{x:Bind ViewModel.MongoDbUrl, Mode=TwoWay}"></TextBox>
                                </StackPanel>
                            </StackPanel>

                            


                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="0,5,10,0"  x:Uid="Settings_historysend" Text="Send events to NotificationUrl" Style="{StaticResource BodyTextStyle}"/>
                                <ToggleSwitch x:Uid="Settings_historyToggle"    IsOn="{x:Bind ViewModel.SendEventsToNotificationUrl, Mode=TwoWay}"/>
                            </StackPanel>
                            <StackPanel x:Name="txtNotificationUrl">
                                <TextBlock Margin="0,5,0,0"   x:Uid="Settings_notification" Text="NotificationUrl" Style="{StaticResource BodyTextStyle}"/>
                            <TextBox Text="{x:Bind ViewModel.NotificationUrl, Mode=TwoWay}"></TextBox>
                            </StackPanel>


     



                            <StackPanel Orientation="Vertical" x:Name="numberofdays" >
                                <!--<StackPanel Orientation="Horizontal" Margin="0,0,0,0" x:Name="TheLastReading">
                                    <TextBlock   Margin="0,5,10,0"   x:Uid="Settings_OnlyFromTheLastReading" Text="Only from last reading (from NS))" Style="{StaticResource BodyTextStyle}"/>
                                    <ToggleSwitch  x:Uid="Settings_OnlyFromTheLastReadinge"  IsOn="{x:Bind ViewModel.OnlyFromTheLastReading, Mode=TwoWay}"/>
                                </StackPanel>-->
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock   Margin="0,5,10,0"   x:Uid="Settings_interval" Text="Number of days in history" Style="{StaticResource BodyTextStyle}"/>
                                    <TextBox x:Name="txtHistoryDaysBack"  Text="{x:Bind ViewModel.HistoryDaysBack, Mode=TwoWay}"></TextBox>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal">
                                    <TextBlock   Margin="0,5,10,0"   x:Uid="Settings_interval" Text="Clear history" Style="{StaticResource BodyTextStyle}"/>
                                    <Button ToolTipService.ToolTip="Clear" Command="{x:Bind ViewModel.ClearHistoryCommand}" >Clear</Button>
                                </StackPanel>
                            </StackPanel>


                            
                            <Interactivity:Interaction.Behaviors>
                                <Core:DataTriggerBehavior Binding="{Binding IncludeHistory, Mode=TwoWay}" Value="False">
                                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=numberofdays}" PropertyName="Visibility" Value="Collapsed" />
                                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=TheLastReading}" PropertyName="Visibility" Value="Collapsed" />
                                </Core:DataTriggerBehavior>
                                <Core:DataTriggerBehavior Binding="{Binding  IncludeHistory, Mode=TwoWay}" Value="True">
                                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=numberofdays}" PropertyName="Visibility" Value="Visible" />
                                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=TheLastReading}" PropertyName="Visibility" Value="Visible" />
                                </Core:DataTriggerBehavior>
                                <Core:DataTriggerBehavior Binding="{Binding  OnlyFromTheLastReading, Mode=TwoWay}" Value="False">
                                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=txtHistoryDaysBack}" PropertyName="IsEnabled" Value="True" />
                                </Core:DataTriggerBehavior>
                                <Core:DataTriggerBehavior Binding="{Binding  OnlyFromTheLastReading, Mode=TwoWay}" Value="True">
                                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=txtHistoryDaysBack}" PropertyName="IsEnabled" Value="False" />
                                </Core:DataTriggerBehavior>

                                <Core:DataTriggerBehavior Binding="{Binding  SendEventsToNotificationUrl, Mode=TwoWay}" Value="False">
                                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=txtNotificationUrl}" PropertyName="Visibility" Value="Collapsed" />
                                </Core:DataTriggerBehavior>
                                <Core:DataTriggerBehavior Binding="{Binding  SendEventsToNotificationUrl, Mode=TwoWay}" Value="True">
                                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=txtNotificationUrl}" PropertyName="Visibility" Value="Visible" />
                                </Core:DataTriggerBehavior>


                                <Core:DataTriggerBehavior Binding="{Binding  UploadToNightscout, Mode=TwoWay}" Value="False">
                                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=NightscoutText}" PropertyName="Visibility" Value="Collapsed" />
                                </Core:DataTriggerBehavior>
                                <Core:DataTriggerBehavior Binding="{Binding  UploadToNightscout, Mode=TwoWay}" Value="True">
                                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=NightscoutText}" PropertyName="Visibility" Value="Visible" />
                                </Core:DataTriggerBehavior>
                    
                            
                            </Interactivity:Interaction.Behaviors>

     
                            
                        </ItemsControl>

                    </ScrollViewer>






                </Grid>
            </PivotItem>
            <PivotItem Header="Developer">
                <Grid Margin="{StaticResource MediumLeftRightMargin}" >

                    <ScrollViewer>

                        <ItemsControl ScrollViewer.VerticalScrollMode="Enabled" ScrollViewer.VerticalScrollBarVisibility="Visible">

                            <TextBlock  Margin="0,5,0,0"  x:Uid="Settings_keyhashed" Text="Hashed NightscoutApiKey (Readonly)" Style="{StaticResource BodyTextStyle}"/>
                            <TextBox  Text="{x:Bind ViewModel.NightscoutApiKeyHashed, Mode=OneWay}" IsReadOnly="True"></TextBox>


                            <TextBlock  Margin="0,5,0,0"  x:Uid="Filepath" Text="Local path to logs" Style="{StaticResource BodyTextStyle}"/>
                            <TextBox Text="{x:Bind ViewModel.LocalPath, Mode=OneWay}" IsReadOnly="True"></TextBox>

                            <StackPanel Grid.Row="11" Grid.ColumnSpan="2" Margin="0,16,0,0">
                                <TextBlock x:Uid="Settings_About"    Style="{StaticResource BodyTextStyle}"/>
                                <TextBlock    Text="{x:Bind ViewModel.AppDescription, Mode=OneWay}"   Style="{StaticResource BodyTextStyle}"/>
                                <TextBlock x:Uid="Settings_AboutDescription"  Style="{StaticResource BodyTextStyle}"/>
                            </StackPanel>
                        </ItemsControl>

                    </ScrollViewer>

                </Grid>
            </PivotItem>
            <PivotItem Header="Devices">
                <Grid Margin="{StaticResource MediumLeftRightMargin}" >
                    <StackPanel>
                        <HyperlinkButton Grid.Column="1" ToolTipService.ToolTip="Refresh devices" Command="{x:Bind ViewModel.GetDevicesCommand}"  Margin="0,0,10,0" HorizontalAlignment="Right" >
                            <Grid>
                                <Path Data="M1.6000061,18.200001L11.199982,22.599996 8.6000061,24.400015C10.699982,26.200002 13.299988,27.30001 16.100006,27.30001 21.399994,27.30001 26.100006,23.800009 27.199982,18.700002L27.399994,18.300007 32,18.300007 31.799988,19.099996C30.5,26.599998 23.899994,31.599998 16.100006,31.599998 11.699982,31.599998 7.6999817,29.900017 4.6999817,26.900017L2.5,28.400017z M15.899994,0C20.299988,1.8645551E-07,24.299988,1.6999976,27.299988,4.5999921L29.399994,3.000001 30.299988,13.000004 20.699982,9.1999996 23.299988,7.3999956C21.199982,5.5999926 18.600006,4.5999921 15.799988,4.5999921 10.5,4.5999921 5.7999878,8.3000048 4.6999817,13.399998L4.5,14.300007 0,14.300007 0.19998169,13.000004C1.5,5.5000017,8.1999817,1.8645551E-07,15.899994,0z"
                              Stretch="Uniform" Fill="#FF0EA333" Width="15" Height="15" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <RotateTransform Angle="0" />
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </HyperlinkButton>


                        <Pivot x:Name="devicePivot" ItemsSource="{x:Bind ViewModel.Devices}">
                            <Pivot.HeaderTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding}" />
                                </DataTemplate>
                            </Pivot.HeaderTemplate>
                            <Pivot.ItemTemplate>
                                <DataTemplate>


                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="30"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>


                                        <HyperlinkButton  ToolTipService.ToolTip="Delete device" Command="{Binding DeleteDeviceCommand}"
                                             VerticalAlignment="Center" Margin="0,0,10,0" >

                                            <Grid>
                                                <Path Data="M20.200012,8.4000015L16,12.599998 11.800049,8.5 8.4000244,11.900002 12.600037,16.099998 8.4000244,20.300003 11.800049,23.699997 16,19.5 20.200012,23.699997 23.600037,20.300003 19.400024,16 23.600037,11.800003z M16,0C24.800049,0 32,7.1999969 32,16 32,24.800003 24.800049,32 16,32 7.2000122,32 0,24.800003 0,16 0,7.1999969 7.2000122,0 16,0z"
                                          Stretch="Uniform" Fill="#FFEA4343" Width="16" Height="16" Margin="0,0,0,0" >
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <TransformGroup.Children>
                                                                <RotateTransform Angle="0" />
                                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                            </TransformGroup.Children>
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                            </Grid>
                                        </HyperlinkButton>

                                        <ItemsControl  Grid.Row="1" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollMode="Enabled" ItemsSource="{Binding DeviceInformation}"  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Margin="10" >
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>

                                                    <StackPanel Margin="0,10,0,0" >
                                                        <TextBlock Margin="0,0,10,0" Text="{Binding Key}" VerticalAlignment="Center"></TextBlock>
                                                        <TextBox Text="{Binding Value, Mode=OneWay}" IsReadOnly="True"  ></TextBox>
                                                    </StackPanel>


                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>

                                    </Grid>



                                </DataTemplate>
                            </Pivot.ItemTemplate>

                        </Pivot>



                    </StackPanel>

                </Grid>


            </PivotItem>
            <PivotItem Header="Other">
                <Grid Margin="{StaticResource MediumLeftRightMargin}" >


                    <ItemsControl >
                        <TextBlock   Margin="0,0,10,0"  x:Uid="Settings_Theme" Style="{StaticResource BodyTextStyle}"/>

                        <ToggleSwitch   x:Uid="Settings_ThemeToggle" IsOn="{x:Bind ViewModel.IsLightThemeEnabled, Mode=OneWay}">
                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="Toggled">
                                    <Core:InvokeCommandAction Command="{x:Bind ViewModel.SwitchThemeCommand}"/>
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                        </ToggleSwitch>
                    </ItemsControl>




                </Grid>
            </PivotItem>
        </Pivot>


        <!--  Adaptive triggers  -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <!--<VisualState.Setters>
                        <Setter Target="TitlePage.Margin" Value="48,0,12,7"/>
                    </VisualState.Setters>-->
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
